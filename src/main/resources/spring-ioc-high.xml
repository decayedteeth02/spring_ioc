<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


<!--    控制bean的加载顺序，当一个bean想让另一bean在她之前加载可以设置depeng-on-->
<!--    <bean class="cn.test.beans.Person" id="person" depends-on="wife"></bean>-->
<!--    <bean class="cn.test.beans.Wife" id="wife"></bean>-->

<!--    懒加载-->
<!--    <bean class="cn.test.beans.Wife" id="wife" lazy-init="true"></bean>-->

<!--    作用域-->
<!--    singleton默认值 同一个id始终只会创建一个bean-->
<!--    prototype每一次使用都会创建一个bean-->
<!--    <bean class="cn.test.beans.Person" id="person" scope="prototype">-->

<!--    </bean>-->

<!--    使用静态工厂实例化bean-->
<!--    <bean class="cn.test.beans.PersonFactory" id="personFactory">-->

<!--    </bean>-->
<!--    <bean class="cn.test.beans.Person" id="person" factory-bean="personFactory" factory-method="createPersonFactory"></bean>-->

<!--    自动注入-->
<!--    byType根据类型自动注入-->
<!--    当出现多个类型或匹配不到类型就报错-->
<!--    byName根据set名字方法去匹配-->
<!--    constructor 根据构造器去匹配-->
<!--    优先根据名字去匹配，假设没有匹配到，会根据参数类型去匹配-->

<!--    当根据类型匹配到多个，可以设置某个bean为主要bean-->
        <bean class="cn.test.beans.Person" id="person" autowire="constructor">
        </bean>
    <bean class="cn.test.beans.Wife" id="wife" primary="true">
        <property name="name" value="迪丽热巴"></property>
    </bean>
    <bean class="cn.test.beans.User" id="user"></bean>
<!--    <bean class="cn.test.beans.Wife" id="wife2">-->
<!--        <property name="name" value="迪丽热吧"></property>-->
<!--    </bean>-->
</beans>